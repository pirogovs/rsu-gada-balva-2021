{"version":3,"sources":["js/bind_polyfill.js","js/classlist_polyfill.js","js/animframe_polyfill.js","js/keyboard_input_manager.js","js/html_actuator.js","js/local_storage_manager.js","js/tile.js","js/grid.js","js/game_manager.js","js/application.js"],"names":["Function","prototype","bind","target","self","args","Array","apply","window","Element","document","documentElement","push","splice","join","DOMTokenList","el","classes","className","replace","split","i","length","call","add","token","contains","toString","indexOf","item","index","remove","toggle","defineElementGetter","obj","prop","getter","Object","defineProperty","get","__defineGetter__","HTMLElement","lastTime","vendors","x","requestAnimationFrame","cancelAnimationFrame","callback","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","clearTimeout","KeyboardInputManager","events","navigator","msPointerEnabled","eventTouchstart","eventTouchmove","eventTouchend","listen","on","event","emit","data","callbacks","forEach","map","addEventListener","modifiers","altKey","ctrlKey","metaKey","shiftKey","mapped","which","undefined","preventDefault","restart","bindButtonPress","keepPlaying","touchStartClientX","touchStartClientY","gameContainer","getElementsByClassName","touches","targetTouches","pageX","pageY","clientX","clientY","touchEndClientX","touchEndClientY","changedTouches","dx","absDx","abs","dy","absDy","selector","fn","button","querySelector","HTMLActuator","tileContainer","scoreContainer","bestContainer","messageContainer","score","actuate","grid","metadata","clearContainer","cells","column","cell","addTile","updateScore","updateBestScore","bestScore","terminated","over","message","won","continueGame","clearMessage","container","firstChild","removeChild","tile","wrapper","createElement","inner","position","previousPosition","y","positionClass","value","applyClasses","classList","mergedFrom","merged","appendChild","element","setAttribute","normalizePosition","difference","textContent","addition","type","getElementsByTagName","fakeStorage","_data","setItem","val","String","getItem","hasOwnProperty","removeItem","clear","LocalStorageManager","bestScoreKey","gameStateKey","supported","localStorageSupported","storage","localStorage","testKey","error","getBestScore","setBestScore","getGameState","stateJSON","JSON","parse","setGameState","gameState","stringify","clearGameState","Tile","savePosition","updatePosition","serialize","Grid","size","previousState","fromState","empty","row","state","randomAvailableCell","availableCells","floor","random","eachCell","cellsAvailable","cellAvailable","cellOccupied","cellContent","withinBounds","insertTile","removeTile","cellState","GameManager","InputManager","Actuator","StorageManager","inputManager","storageManager","actuator","startTiles","move","setup","isGameTerminated","addStartTiles","addRandomTile","prepareTiles","moveTile","direction","vector","getVector","traversals","buildTraversals","moved","positions","findFarthestPosition","next","farthest","positionsEqual","movesAvailable","pos","reverse","previous","tileMatchesAvailable","other","first","second"],"mappings":"AEAC,AFADA,ACAA,CAAC,ODAO,CAACC,IEAI,ADAA,KDAb,CAAmBC,IAAnB,GAA0BF,QAAQ,CAACC,SAAT,CAAmBC,IAAnB,IAA2B,UAAUC,MAAV,EAAkB;AECrE,AFAA,ACAA,MCAIuC,AFAAtC,ACAA,IDAI,GAAG,ACAAI,CCAC,GAAG,AFAf,CEAA,CDAiB,CAACC,OAAd,KAA0B,WAA1B,IACA,eAAeC,QAAQ,CAACC,eAD5B,EAC6C;ACA7C,AOFF,ATEE,ACCE,MCDEgC,GFAG,IEAI,GAAG,CAAC,EFAEtC,IAAV,EEAO,AFAS,EEAE,KAAX,CAAd;AFCE,ACCD,QDDK,EAAEA,IAAI,YAAYC,KAAlB,CAAJ,EAA8B;AEAhC,AOFF,ATGMD,MAAAA,CEDC,GFCG,CEDCuC,CAAC,CFCC,CAACvC,CEDC,CAAb,EAAgBuC,AFCL,CEDM,AFCb,GEDgBD,OAAO,CAACrB,MAAZ,IAAsB,CAACd,MAAM,CAACqC,qBAA9C,EAAqE,EAAED,CAAvE,EAA0E;AACxEpC,AFCC,ACCH,ICFEA,EDEEP,ICFI,CAAC4C,IDEI,GAAGvC,KAAK,CAACL,QCFpB,CDEF,ECFiCO,MAAM,CAACmC,OAAO,CAACC,CAAD,CAAP,GAAa,uBAAd,CAArC;AACApC,AOHJ,ARIE,AINFA,IHKIA,EDEEI,AIPA,CAAC+I,GHKG,ADEA,CCFC7G,EDEE7C,KIPb,GAAqB,CJOC,CAACW,IADrB,ICDE,GAA8BJ,MAAM,CAACmC,OAAO,CAACC,CAAD,CAAP,GAAa,sBAAd,CAAN,IAC5BpC,MAAM,CAACmC,OAAO,CAACC,CAAD,CAAP,GAAa,6BAAd,CADR;AAED,AFDCxC,ACAF,AONF,ADAA,AHAO,ADAA,AECLwJ,ACDK,EDCLA,ELKExJ,ECEES,CIPC,CLKC,CAACN,AINOoG,ADAAlD,AECP,ACDO8H,EDAK,CJQT,CKRL,CNMH,AMNiB9C,CNMNtI,ACEAF,MDFX,AING,CEAA,CNMgBI,CCEC,AGRO,AEAAwI,CLQNhI,EDFrB,EGNG,AGAA,ELML,AKNoC,CHAC;AMGvC,ATIG,ACDD,AGLA,ADAA,AEEAgJ,ACFA,EDEAA,CLDA,GCOI/I,CGRC8F,ADAAlD,AGAAd,CAAL,CDEO,CJMC,CINC,ACFe6F,ELQbxI,AERX,GAAc,EAAd,CGAgC,CFAhC,AEAiC2C,CAAjC,CLQoB,CAAC9B,AGRGJ,IHKxB,CIHmB4C,EAAV,CDFuB,CAACoD,ACEVoD,GAAd,EAAmB,QDFJ,CAAuB,iBAAvB,CAAxB;AFQA,AFDD,AQPD,ADAO,AHCL,ACEE,ACFF,CNFF,KESM,CAACtJ,AEPAqG,AEAA8B,CAAL,CCDcgD,EFGL,ACFelD,EJOb,AKRN,CLQO5F,AKRO+I,EFGLhC,EEHT,CDC2B,CCDPiC,ADCQlD,CFAjC,ACES,ACFT,CDEoBrF,EDFI5C,ACEf,IAAiBqJ,IDFM,CGD3B,AHC4BrD,CCED,CHKhC,AKRwC,AFGPoD,EHKE,CGLH,CAA9B,ODFsB,CAAuB,kBAAvB,CAAxB;AFQEtJ,AONJ,AROE,AMTA,AHCA,ADAA,AEEC,ACFD,GDHmB,CHUjBA,ECPEA,CIDCoL,AHCA9E,AEAA+B,GJOG,CAAChG,ADCA9B,AMTT,CJCU,AGAV,CHAW4C,CIDCiI,CDCY/C,GCDxB,EHCA,AEA6B,EHAzB,CFQJ,AGRwBnI,ADAHkD,CFQC5C,AKRW,CAAjC,CLQA,EAA0B,GGRM,CFO9B,AEP+B0F,GFOA,ICPjC,EAAuC,IDOI3D,AEPnB,CAAuB,OFOd,EAAoB,QEP7B,CAAxB;AFQI,ADCF,AOVG,ADCL,AHCA,ADAE,AEGFiH,ACFA,EDEAA,KEJK3C,AHCAN,AECA2B,ELOE1H,AOVO+L,AHKP,CHIC/J,CDCN,AILO,CEJT,ENSYhC,CMTC6K,CNSX,CADwB,CCAV,ADEd,EOXG,CNSc,AMTOD,EJE1B,AECA,EJMuB3I,AMTlB,CJEmBvC,AECA,CEHQsM,CDCN,AFIP1J,CHIA,CGJV,ACFT,CCF6B,CLQCJ,AGJP,EDHS,CAACwD,CGDCoF,GLQf,AMTd,ENSD,AMT0CmB,IDCjB,CAAepB,EHCpB,CIFnB,AJE0C,EIFSqB,QDC3B,CAAH,GAAmC,CHCrC,CIFnB,AJEL,EIFwE,CDCNnB,KAAL,EAA7D;ALSI,AOPN,ARSI,AOXF,ADCD,AHEC,ADDE,AEGA,ACFF,ECAF,KCHOH,AJGA5E,AEAAgC,EHDEnF,CDOCV,CMTR,AHKS,CDFT,EIHsByI,CJGT,CAAb,ACEchC,CCFd,CEHA,CADwE,CNUtD,AMTU,AFGJ,CDEf,CAAWK,CHIC7G,CCPnB,AGCF,CANoC,CAMN,CJML,ACPG,CDOFC,GAAL,CAAS,CAAT,EAAY,CGJxB,CAA0BC,EAA1B,EHI8BN,CCPrC,CEGuC,KAAK4G,CHIC,GAAGlH,CGJT,CAAWY,EAAX,CAAhC,GHIwB,AGJyB0B,CHIrC,CAAjB,OGJF;AHKE,AENL,ADDG,AEGD,ACFF,GDPoB,MFMZlB,CDOCR,EAAE,GAAG9C,MAAM,CAAC+C,CCPlB,GAA0B,MDOf,CAAkB,QCP7B,IDOyC;AACrCR,AORR,ARSI,AOXF,ALGE,AEIFmH,EAAAA,KGPKiD,CNUCpK,ADCA9B,CERC8C,GEIG,EAAE,CJIC,CCDC,CAACf,CDCChC,COXhB,CPWkB,CAACE,COXG,ALGpB,GDOqB,ACPK,CKHF8L,ENUA7J,EDCV,CAAahC,GIJPmC,EAAV,EHGE,ADCE,AOXM,ALGpB,AEIwB,CHGpB,ADC+B,COXrC,WPWgB,EAAmC,EAAnC,EAAuClC,KAAvC,CAA6C,KAA7C,CAAd;ACAG,AMVL,ADEFuK,AHEAhF,ADDG,AEIC,ACHJ4E,GHNE,CIIE,ADEA,CCFCtL,ADEAA,EJIU,AMRRmN,ENWDjK,ACRG,EEIE,CDHC,CAAClD,CGFb,ADEA,CCFe8L,ADEAP,GDGG,CHCH,CAAT,AKNN,CCFE,CJIF,CGFuB,AHEAvE,ACGA2C,CGPC,GFIxB,CEJ4BsD,AHOV,CAAW5J,CDH7B,AEA8B,CDGZ,CAAd,CDH6B,EGFE,OCFX,AFIkB,CFAC4D,CIJzC,GJI+B,EAAgBC,QAAhB,EAA0B;AFQrDzE,AOTN,ARQI,AOVF,ADEA,AHEA,ADDE,AEID,ACHD,GDVmB,GHiBfA,AKTA2E,AHEAjH,CIJCiN,AFIA3E,ELME,AEPA7E,CCCC,CGFC,ENQExC,AGNA,CFOC,ADDA,AMRA,CCFZ,CDEA,CLSe2B,ADDA,AGNf,CHME,AOVoB,EPUJ3B,CAAC,COVO4L,CFI1B,CLMsBhM,AEPpB,CDQqB,CIPC,CHDI,CDQFkC,EMXJ,CPUO,CAAC7B,AOV9B,MNWI,ADDF,CEPA,CFOoCD,CAAC,EAArC,EAAyC;ACEvC,AOTNb,ARQMI,AOTJ,AJIAJ,ADFE,AEKF2J,ACL0BvH,EFE1BpC,ACGA2J,ECL0BvH,CAAC,CGDvB,ARQAhC,CQRCiC,ADDAyK,AHOA,ACLwB,CFEvB,CAACzK,ADFAiB,AEKA,CJEC,CAACvC,CKPyBqB,CJQvBU,AIRa,EJQpB,ADDA,CAAU,COTd,GPSI,AOTkB,CAAtB,CPSoBrC,CEPlB,GAA0B,AEKT,EINrB,CAA6B,ARQA,CAACI,AGL5B,CHK2B,AGLE,CHKzB,KEPF,IMDqC,ELGE;AFOtC,AOTH,ARQG,AORH,ADAA,AHGEjB,ADFA,AEKA,ACNmCuI,IFGnCvI,AEHmCuI,CJAnC,AIAoC,CGAlCoE,CDACI,ADAA,ADAmC,CFGlC,CAAC/F,ADFArD,EIDEnB,AFMA,CENC,ADAmC+F,GCAhC,CAAb,AFMciB,EENEhH,CCAhB,ADAiB,CCACqB,CHMT,CGNT,ADAoB,AJClB,CKDmB,AJGnB,CAAoB7D,ACGA,CFLM,CEK1B,CENuBwL,CHGC,CIH1B,AJG2BhF,EKH3B,ADA6B,ADA7B,CEAgB,CAAhB,AFA+BhE,CAAC,CEAba,ANCjB,CKDgC8J,ADAlC,EAAoC,ECAP,CAAUrN,CJGrC,GIH2B,CAAe,IAAf,CAA7B,4BCAA,EAAyCyG,2BAAzC,EAAuDyD,0CAAvD;APUC,AOTF,ARQE,AORD,ADAE,AHIAlD,ADHD,AEKA,ACPuB,CGD1B,EHCE,CFKEA,GIJGiG,CDACnB,AHIA,CAAC3E,EGJE,GAAGA,AHIV,CAAW/C,IIJb,ADAiB,CCACL,ADAArB,CAAD,CCAjB,ADAY,AHIV,CIJmB,AJIA,EGJE,EAArB,KCAF,CJI+B0E,CIJC,KAAKpC,AJIhB,EAAkB,KIJP,CAAahF,IAAb,CAAkB,IAAlB,CAAhC;AACA,AJIIoH,AChBe,ACWpB,CDXD,ACSA,KFOMA,CIJC6F,KJIK,CAAC7I,MIJX,CAAkBL,AJId,CAAe,CIJnB,CAAqB,QJIQsD,IAAV,CIJnB,CJImC,CIJC,KAAKnC,WAAL,CAAiBlF,IAAjB,CAAsB,IAAtB,CAApC;ANUA,ADDAa,AOPA,ADDE,AHII,ADHN,EFOAA,ICCI,CAACP,AMRAgN,ALAAxJ,EIDE,GCCP,AJGUuD,CFKC,AKTAoB,AJCX,CDQY7F,ADDA,AMRA,CNQC7C,CGJP,CGJS,CAAb,AHIc,EGJE0I,CAAC,GNQnB,AMRsB,GNQG,EMREiD,IAAzB,CLSF,CKTiCjD,CLSC,AKTA,EAAhC,EAAoC;ALUpCnI,ADDAgB,AOPH,ADDKwK,AHII5L,ADHT,AEKM,ACPPmL,EEIA,ENMI/K,ADDAgB,AKTA,CAACvB,CCCC+L,CNQC,EAAE,AMRA,AFMO5B,CHGN,AKTAxJ,AHIAR,CFKC0C,GKTL,AHIQ,AELd,CCCe,AHIA0E,AELAiE,ICCT,GNQahK,AGJT,CAAa8F,IHId,AGJC,CCEH,CJEmB,AKT1B,EJUI,AGHkC,CCPN,EJUE,QIVQkB,EJUEnF,EAAV,EAAc,EIVhB,EAAoB;AJW9CE,ADDA,AMRD,AHII,ACEP,ACPA,MJUIA,CGHC6G,ACPAzH,CAAL,ELSQ,CKTC6F,ILSI/G,GCCG,CAAC4B,AGHjB,ACPiB,CAACV,CJUF,AIVhB,CJUI,AGHoB,CJEhB,CAAcnB,KAAd,CAAJ,EAA0B,CIF9B;AHIG,ADDCb,AMRH,AHII,ADHP6C,AEKE,ACPA,KJQE,CDCE7C,CGRA,ACMC0J,ACPA3B,CAAL,ELSQ,CAACpH,AKTAkH,ILSL,CAAU,GIFd,ACPiB,CLSb,AEPc,AGFAE,CHEC1I,AGFnB,CLSoBwB,AIFI,KJEpB,GEPN,CAA+BwC,EAA/B,AEKE,GFLkC,UAAUC,KAAV,EAAiBnB,QAAjB,EAA2B;ADS5D,ADDG,AOPNgK,AJGK,ADHH,AEMA,ACRD,CAHD,IFEI,CDGE,AEMAxC,CFNC,IFOIvJ,AOPA,CAACf,ALAAyD,CFON,CAAQxC,CIDC,GFNR,AEMW,CFNCgD,EKAnB,CAAsBgB,CPOhB,AIDiBsF,CFNhB,CAAL,CFOwB,CEPC,EKA3B,EPO+B7I,COPC,OPON,EAApB,GOPsC,AHM1B,EAAhB;AHGD,ADDI,AOPH,ADDA,AHKEvB,ADJA,AEMF,CHzBD,GAAD,AEuBIA,CHFuB,EOFpBgN,AHMA3C,CDFC,CGLCpD,AHKAI,ADJA/D,KIDP,AFOA,CFNE,CAAYQ,CEMCqG,GDFb,CIJF,AJImBpD,ADJjB,CKAkBmE,GLAG,CEMC,CFNtB,ECIyB,ACEA9K,CDFCwG,KAA1B,ACE+B,CGNjC,AHMkC0D,YAAV,GAAyBlK,MAAM,CAACmJ,WAAxD;AJEEjI,AOPF,ADDD,AHKGtB,ADJD,AEMF,ACRDmL,CCXA,GNoBI7J,AGHAtB,AENA,CAACH,EEEEoN,CJIC,CAAC3F,GHGG,EAAE,AKTd,CEEE,AFFagE,CEEC1D,QJIZ,AENJ,CFMyBb,EENE,CEEzB,GAF0C,CPSpB1F,AOPQ,CJIC,CAACkG,GHGpB,EAAiB,AKTQ,IFMnC;AHIE,AKTJ,SAAO,ILSI,KAAK3G,EAAL,CAAQE,SAAR,CAAkBU,OAAlB,CAA0BH,KAA1B,KAAoC,CAAC,CAA5C;AACD,AORH,ADAFkK,AHKI,ADLF,AEOFvB,ACRI3B,ICCA,ADDAA,CLCuB,AMAtBxI,ECAEuN,ALAA9J,CCKCyD,IILN,AFDU,CHCV,CIAF,AJAcjD,AGDA,CCCC4H,CHKC,CAAClE,EDLf,AEOiB,CAAC3H,CFPCW,GIArB,CJAE,CAAwBmC,CIAC,AHKvB,EAAyB,ACE7B,CAA8ByH,IFP5B,GIAmCyB,KAAV,EAAiB,OFO5C,GAAsD,YAAY;AJE9DpK,AORH,ADAC,AHKI,ADLL,AEOC,ACRIe,CEHN,ALDA,EKOA,CPMIf,EMREwF,AFOAsD,ACRA/H,CAAC,CLSC,CKTC,CLSC,AGHAuE,CGLC,EFOE,CEPC,ADDAvE,CADA,CCEZ,AFOc,EDFE,CAACiF,GCEjB,CDFI,CHGc/F,CGHK,IHGf,EAAiB;AACrB,AGHE1B,AENFuI,MAAAA,CAAC,CFMCvI,CENC,GFMG,CHGC,AGHA0H,CENCa,ILSI7G,EGHV,CAAa,EHGR,GGHL,EHGoB,AGJH,CACI,GHGvB;AACD,AMRH,AHKK,ADLP2B,AEOE,ACXY,KLCa,AKFlB,CDYH,CEPC,AHGD,IGHKb,CAAC,CHKC,EGLE,CAAb,CHKeuE,CGLCvE,CAAC,CJAC,CAAC3C,CIAC,GHKG,CAAC8H,CGLC6D,EHKd,CDLb,CIAE,AHK6B,ADLAzH,EIAEvB,CAAC,CJAlC,CIAE,EAAoC,AJAA,UAAUsB,KAAV,EAAiBE,IAAjB,EAAuB;AFSzDrC,AORJgL,ADAI,AHKI3M,ADLN,AEOE,ACRAyI,ILSA9G,AKTA8G,EHCExE,EIAE2H,AHKA5L,ACEAqK,CCRC,CLSC,CORC,ADAA,ADDA,CLSC,AORAxK,AJKA,CAAC6H,CGLCT,CJAC,AEOA,CCRCwB,EHCE,AEOArI,CEPC,CAACoC,AHKZ,CILR,ADAmB,AHKE,CILCwC,ADAR,CJAS1B,CEOC,CEPC,AHKjB,ACEiBgH,EEPrB,AHI2B,CHITjJ,AGHM,CDLV,CAAYyC,GFQlB,AORZ,EPQ6B,AERX,CKAkB,ALAlC,CEOE,WGP4C;APS1C,AORJ,AJKK,ACEHuG,ACdK,GAAP,CDcEA,GGPGrF,GPQG,CAAC,AIDA,CAACyE,IJCInI,EORd,CHOE,CAAgBiJ,CGPC,GPQV,CAAclJ,CORvB,CHOE,EAAyB,CJClB,CAAL,CIDF,CJC6B;AOP/B,ADAE,AHKC,ADNH,AEQEgJ,ACRH,CARD,GDgBIA,EFREpG,CKCCgJ,EDAE,EFOE,CAACnD,CEPCvB,CAAC,CCAZ,ALDA,CKCcX,CDAC,AJDA,CICb,EAAgBW,CAAC,CFOjB,CAAmBgC,CEPC,ICAtB,CDA2BiB,CFOzB,CGT4C,CAEhB,CDA5B,EAA+BjD,CAAC,EAAhC,EAAoC;ANQlC,AOPL,ADAK,AHMH,ADPCtE,AEQA,CGVJ,EAKA,AJlBE,CDeEA,MICMgE,CNOC,AIAA,EFRE,CICC,AJDA/D,CFQCjD,AIAX,CJAY,CMPC4K,ENOE,CAAb,CERF,CFQkB5K,AMPA,AJDA,CFQC,AMPAuB,CAAD,CAAL,CNOS,AMPA+F,CAAT,CAAX,GNOyBrH,CERCyB,KFQ1B,EAAiC1B,CAAC,AERlB,EFQhB,AERoC,EFQE;AACpC,AMPF2K,AHML,ADPKjJ,AEQH,CD3BH,EA4BA,ACNE,CAKE,EEPEiJ,AJDAjJ,GICG,CAACnC,CFOCgK,CJAC,EMPN,AJDQ,CICCvC,AJDAjE,CEQX,CJAa/C,CAAL,AIAM,CEPC,AJDL,CAAR,EICgB,CNOCI,GMPG8J,ENOlB,EAAsB,MMPR,CAASlD,IAAI,CAACI,QAAd,EAAwBJ,IAAI,CAACQ,KAA7B,CAAH,GAAyC,IAAtD;ANQC,AMPF,AJDA,AEQD,KFVA,MEUO,KAAP;AGNJkE,ADAG,AJDA,AEQA,WGPQ,CAAC9M,SAAZ,CAAsBwN,gBAAtB,GAAyC,YAAY;APO/C5M,AONJ,AJMF8F,ADPC,AEQA,CFfD,AEIA,EAaA,GJHM9F,GONG,GPMG,AGAA,CHACU,AGAAtB,CINC4H,GPMR,CAAY,AONT,IPMH,AONiB,AJMvB,CAAuBG,CHAC3G,CAAlB,EAAqB,AONC0G,CPMtB,EONiB,IAAY,CAAC,AJMpC,GAAsC,EING3C,UJMS,CINhD;APOI,AONL,ADAC,AHMA,CIRF,EAIA,IJIO6C,EGNEZ,ENMErG,EAAL,CAAQE,AMNZ,KHMA,IHAI,GAAoB,KAAKS,QAAL,EAApB;AACD,AMNJ,AHMA,ADPD8B,CIZA,AHiBA,EGFA,ENf2B,eEYP,CAACxD,SAArB,CAA+B+D,MAA/B,GAAwC,YAAY;AFQhDrC,AEPF,AEQFyI,IJDIzI,EEPEvB,IAAI,EFOE,CEPC,CFOC,GEPZ,EEQiB,CAACH,SAApB,CAA8B4K,IJDJ,QIC1B,GAA6C,YAAY;AJAnD,AONNkC,AJMApG,ADNE,AEOA,MFPIpC,GAAG,AEOA,EGPE,CAACtE,AJMA,ADNA,CFMCa,AGAAb,CCCCwK,GJDG,CAAClJ,GONlB,AHOS,CJDI,AONSiM,AJMtB,ACCsBxD,CJDC,AGAA5C,IHAV,AONb,EPM6B,AICpB,CGPqB,AHOA,EJDjB,CAAP,EIC6BiD,EDDnC,GAAwC,EINE,KHOjC,GDDyCnC,ECCE,CAAlD,MDDsC,EAAqB;AHCxD,AONH,ADAFyD,AHME,ADNE,AEOH,CAFD,GELI,CNhBuB,AMgBtB1L,CCAC4L,ELAE,CCMC3D,ADPG,KICZ,CAAegE,GHMG,CINC,AJMA/D,GING,KAAKiF,EJMzB,EAA6B,GGN/B,GAAqC,ICAf,CAAoBrC,ODAO,KCA3B,EAApB,CADwC,CAGxC;APKE/I,AMNF,AHMEkG,ADPO,IFOPlG,AGAAkG,EGNEb,INMI,CMNC,CNMC,CGAC,CGNC,AHMAe,KGNK+D,MHMf,CAAsBjE,EHAJzG,KAAV,AMNE,ENMe,AMN3B,AHMiC,CAAC0G,UAAhC;AHCE,AOLJ,AJKC,ADPC,AEQJiC,MGNMyB,ELFE,CAFI,CFSF,CAAC,KAAKnK,GOLd,AHMiB,CAACzB,CGNC,GPKV,CAAcwB,IICzB,CJDW,AICmBqJ,CJDxB,EAA2B,SICjC,GAA6C,UAAU9D,KAAV,EAAiB;AJAtD,AOLJ,ADDF,AHMD,ADRU,AEST,CDLF,KGFMK,CFOCoD,EGNEvD,EDDE,CAAC5F,CNMCE,AOLT,CHMF,CAAaqI,CJDP,AOLe,CPKNpI,CMNf,ECCyBkK,ADDP,ENMZ,AICN,CAAqB,KAAKtB,EGNL,CAASwB,SHM9B,EAAwC7E,EGNG,CAACE,EHM5C,EGN8B,CAAmB0E,IAA5B,EACSC,aAAa,CAAC3E,IAAd,CAAmBG,KAD5B,CAAnB,CADiB,CAEsC;APKpD,AMNH,AJFA,AESH,CAFD,EAIA,IJLM,CENE,CAHI,EIKDA,ENME,GMNG,CAACjE,IAAI,CAACgJ,KAAL,CAAWhJ,IAAI,CAACiJ,MAAL,KAAgBhF,KAAK,CAAC/F,MAAjC,CAAD,CAAZ;ANOI,AOLJ,ADDD,AHMHqF,ADTW,SKIFK,GJKG,CHACjF,AGAA9B,CILT,GAAmB4L,EPKf,CAAYpK,EGApB,CAAuB+F,EHAf,KOL4B,AJKpC,CILqCR,EJKJ,GIL7B,OJKuCqB,IAAV,EAAgB;AHC1C,AOLH,ADDH,AHMC,ADTE,CIHJ,KHYMjI,EDTE,CKICyH,ALRG,CCaF,GILN,AJKS,GILUgE,CJKrB,YILkC,CAAChE,IAAjC;AACA,AJMF,ADXS,AEWXuC,MDAM9B,GINGP,GAAL,CJMS,EINU8D,CJMLnL,GCAC,CAACT,IDAM,CAACsI,GINS,CAACR,AHMrC,CAA8BgD,EGN1B,MJMc,CAAuB,GCAzC,EDAkB,CAAhB,ACA2C,YAAY;AJAnD,AOLF,ADDJY,AHOE,ADXE,AEWF,IEPE,CAAC1L,CHOCuI,ACAAwC,EFXE,CKKC5F,ALVG,ECgBD,EHDE,CMNb,AHOkB1E,CGPHyL,AFOA,GJDGzK,AICA,EGNd,EJMsB,CINHmK,AJMItD,ACAJkC,GJDV,CAAchJ,EMN3B,CFOkB,CAAauI,CJDlB,AMNmB,CNM1B,GOL8B,AJMlB,CINmB5E,AJMI,CCAvB,CAAqB,GDArB,CAAhB,CGP0C,AFOAkF,IGNxC,QHMc,CAAhB;AJAG,AOLF,ADDD,AHOA,ADZS,AEYT,GGbA,GDMIjD,AHOAoB,GING,AHMAuC,EEPE,GAAG,AHOA,EGPZ,CHOgB3C,CCAA,GDAI,ACAD4C,CDAEvC,GCAE,CAACwC,KAAL,CAAWF,MDAd,GCAG,CDAsB,ACAzB,GAA2B,IAA3C;AJhCyB,AO2BvB,ADAF,AHK2CpI,ADXzC,AEYH,CAHD,EJ9BE,CGgC2CA,CAAC,EGLvC0J,AHKyCjE,CDXxC,CKMCnB,ALZG,ECiBwC,CAACtE,CILjD,AJKuC,EGLzC,CCAqB,ADAP,ICAW+I,MDAD/I,CAAV,EAAa+F,CCAN,ADAP,CCAgB,CDAAN,ICAKuD,ADArB,EAAsB,ECAf,CAAnB;APOFpL,AONE,ADAA,AHIoDmI,ADX7C,EFaTnI,EGFsDmI,CAAC,EAAEN,CHEnD,AMNA,CNMCtH,AONAiG,ADAAqB,EHIsD,CAACM,CGJ5D,CCAA,CDAW,ECAQ,CAAnB,GPMF,GAAsB5H,YAAtB;AOLE,ADAEsG,AHGqC,ADVvC,AEaJ+C,GDHE,GGHI/C,EJPE,CKOCQ,ALdG,EIcD,CAACjH,CCAR,GAAmB,ADAjB,CAAW,EFME,CAACX,CGNhB,QHMJ,CAA8BkL,YAA9B,GAA6C,UAAUC,SAAV,EAAqB;AJChE,AONE,ADDexI,AHIjB,ADXS,AEcT,MDHIgG,CCGC6B,CEPY7H,CCCVmF,ADDW,ENOT9F,AMPWW,CCClB,ADDa,EFOf,CGNqB,AHMRiH,IDHI,CIHf,EJGkB,ACGpB,CAAqB,IDHIjB,CCGC0B,EJA1B,CAA6BpI,GAA7B,EAAkCC,IAAlC,AGHoB,ACGpB,CDHuCsG,CHGCrG,AIAA6I,IAAI,CAACI,CJA7C,CGHoB,CHG4B,AGHhD,CAN+C,CAQ/C,ICCwC,CAAeD,SAAf,CAAxC;AJCE,AONA,ADFqBzC,AJNrB,AEcH,CAFD,OJEQtG,AMRiBsG,AJNjB,CKQCvD,ADFiB,AJdd,EIcgBuD,GNQd,CAACrG,KONX,GAAmB,KAAnB,CPMA,AOXK,CAOL,CPI2B;AACzBD,AMTW,AHOf,ADbS,MFeLA,AGFApB,CGPA,KNSM,CAACqB,AGFA,GAAG,CAAC,MAAD,EAAS,EHEnB,CAAsBJ,GAAtB,EAA2BC,EGFEkG,EHE7B,EAAiC,AGFA,CAACQ,KAAxB,EAA+BD,aAA/B,CAAd;AHGMrG,AOLJ,ADJC,AHQH,ADdE,AEeJ6H,MDDM/B,EHCE9F,AEfA,CKUCmL,ALnBG,CCuBF,CHCC,AGDA7E,EHCEzG,GGDP,GAAa,ACCA,CAACnC,EGLhB,CJIF,EAAuBgB,ICCzB,CAA8BqK,EDDE,CAAC1K,IAAR,CAAa,MCCtC,GAA+C,GDDtB,SCCkC;AJDpB,AOHpC,ADJA,AHSD,ADhBS,AEgBT,GGzBwC,ADYxC,CCUA,GPCI,AGECkI,ACAA2B,OAAL,CAAaP,IDAb,CAAkB5B,KCAlB,CAAwB,CDAxB,EAA2BrH,ECAEqJ,KDA7B,OCAA;AJCG,AMRH,AHSA9B,ADjBE,AEgBH,CAFD,CDGEA,GHLE,EGKG,CAACO,ADjBA,CIQC1B,AJlBG,EF0BD,GMRT,GHSA,CAAgB7F,GAAhB,CAAoB,YAApB,EAf+C,CAgB/C;AHDIU,AMRL,AJTU,CIDX,EAYA,GNMMA,GAAG,CAACM,gBAAJ,CAAqBL,IAArB,EAA2BC,MAA3B;AACD,AOLH,AJOA,ADnBE,MCmBEiG,CIPCpB,CLZC,CAXI,CC8BF,CAACyB,GIPT,aJOA,EAA2B;AHD1B,AOLF,AJOG,ADpBO,CKXX,EA0BA;ADJAiD,AHUInL,ADpBA,IIUA,AHUAA,CGVCP,GJVG,CAZI,CCgCF,ADpBC,CCoBA4C,GGVX,CAAeyJ,QAAf,GAA0B,MHUtB,CAA6B,GGVGvJ,QAAV,CHUmB,CGVC;ANS5Cd,AMRA,AHUIhB,EHFJgB,IGEIhB,CGVC,IAAI2B,CAAC,CHUC,CAAC,CGVC,AHUF,CGVX,AHUI,EGVYA,CAAC,AHUAxC,EHFE,CAACqC,AMRA,CHUC,CAACmG,GGVGgD,IAAzB,ENQ+B,AMRAhJ,CNQC3C,AMRA,EAAhC,CHUiB,CGVmB,AHUA,KHFjB,EAAwB,WAAxB,EAAqC,YAAY;AAClE,AOLJ8M,ADHI,AHSoCnK,ADjC5B,GAAV,CAHkD,CAkBlD,GCkBsCA,CGT/B,AHSgC,EHD9B,AOLA,AJMgCyF,CIN/BpI,CDHC0I,CAAC,CNQC5H,AGCgC,CAAC6B,CGT/B,AHSqB,CGTlC,EAAgB+F,CCGpB,ADHqB,CCGC+E,EDHE,GNQb,CAAiB,CMRC9B,GNQlB,CAAP,AMRA,ECGJ,ADHmCjD,CAAC,ECGE,ADHlC,EAAoC,UCGU;APM/C,AOLD,ADHI5F,AHQ6C4F,GHF9B,CAAnB,EMNI5F,CCGC,CJK4C4F,CAAC,EILzCtH,AJK2CgH,CIL1C,EDHE,CCGC,ADHAzF,AHQ2C,CILxD,ADHY,AHQ6C+F,EILzCtH,ADHAsH,CCGC,ADHL,EAAO,CCGC,IDHItB,CCGCiG,IDHN,CAAW1K,CAAX,EAAc+F,CAAd,CCGnB,ADHY,CAAR,CCGiCtH,CAAC,EAAtC,EAA0C;APM3C,AOLG,ADHC,AHOiC,ADjBpCX,CFpDF,CEoDEA,KCiBiB,CAAb,CIJGiN,CLbC,CAACnJ,WKaP,KLbF,CAA0B,SAA1B,EAAqC,UAAUN,KAAV,EAAiB;AKcrD,ADHA,AHOG9D,ADjBF,MCiBEA,EDjBEqE,ECiBE,CAACqE,MDjBM,GAAG5E,GCiBd,CAAkBoE,CDjBC,CAAC5D,KCiBpB,CDjBc,CCiBazD,GDjBGiD,ICiB9B,CDjBmC,CCeI,ADfHS,CCiBC,MDjBvB,IAAiCT,KAAK,CAACU,OAAvC,IACAV,KAAK,CAACW,QADtB;AKcH,ADHA,AHOI,ADhBD,CKQJ,ADLA,ECWA,ADHA,EHEI,GDbIC,MAAM,GAAMP,GAAG,CAACL,KAAK,CAACa,KAAP,CAAnB;ACiBD,GAND,MAMO,IAAIsD,IAAI,CAACW,UAAT,EAAqB;AAC1B/H,ADhBA,ICgBAA,IDhBI,CAACwD,ECgBE,CAAC7D,IAAR,CAAa,CDhBb,EAAgB,UCgBhB;AIHJmM,ADHApB,AHOI,ADhBE,IISF,CAAC1L,IHOI6I,CDhBChE,CKYC,CAAC7E,EDHZ,CAAesM,CJTC,KKYhB,AJII,ADhBiBvH,CKYC2I,AJIArF,OGPtB,AHOI,CDhBE,CCgByBrH,CGPC,AJTA,GKYhC,GAAsC,AJIlC,EAF0B,CAI1B,GGTwC,MCGM;AAChD,ADHA,AJTMiD,MKYF,ELZEA,CISC,CAAC,CCGCgD,ADHA,EJTE,CAACjC,CKYR,CAAUsH,ADHAJ,YJTR,EKYF,ADHK,ECGT,CDH+B7K,CCGC,KDHhC;ACIE,ADHH,AHQG+G,ADjBIjI,CIOR,EAIA,CHMIiI,IILIQ,AJKA,ADjBAzI,CCiBC4I,GDjBG,CKYC,ALZA7E,GKYGf,CLZR,CAAU,CCiBd,CILgB,AJKAkB,CILC+H,GLZb,EAAkBvH,CKYV,AJKZ,CAAwB,IILI,ALZxB,GKYQ,GAAsB,AJKAmE,CILtB,GAA0B,CAAtC,CJKwB,EAAkB;AIJ1C,AJKE7I,ADjBC,MCiBDA,EILEiI,EJKE,CAACb,CILC,GAAG,GJKT,CILa+D,AJKAtC,MAAb,IILS,CAAS,KAAK/B,IAAL,CAAUgF,mBAAV,EAAT,EAA0CrD,KAA1C,CAAX;AAEA,AJIC,ADjBA,KCeD,ADzBoD,CAYpD,GKWK3B,IAAL,CAAU0F,UAAV,CAAqBvE,IAArB;AACD,ADJHsD,AHQG,GARM,CGAL,CAAC1L,IHQI,KGRT,CAAeuM,aAAf,GAA+B,UAAUjF,IAAV,EAAgB;ACK9C,ADJC,AHQEtG,CIXJ,EASA,CJEIA,KGRK,CAAC,CHQC,CAACL,GGRG6L,CHQX,CAAa,UGRP,AHQN,CGRwBlF,IAAlB,CAAR;AACD,AHQG,ADjBA,CIOJ,OJPQ,CCiBCuB,ADjBArE,SAAD,GCiBJ,CAAkB6D,ADjBApE,KAAK,CAACa,CCiBxB,EAA2B9D,EDjBT,KCiBlB,ADjBkC,EAAlC,EAAsC;ACkBvC,ADjBGb,GClB2C,CAqC/C,EDnBIA,IAAI,CAAC8E,OAAL,CAAa3D,IAAb,CAAkBnB,IAAlB,EAAwB8D,KAAxB;AKcN6I,ADJApB,AJTK,IISD,CAAC1L,MCIM,CAACA,EDJZ,CAAewM,MCIf,CAAsBxF,KDJtB,ECIA,CDJ8B,ECIE,QDJQM,ICII,ADJd,EAAgB;ACK5C,ADJA,AJTC,GAhBD,EAnBkD,CKgD9C,ALXJ,GIOO,CAAC,CCIC6F,ADJA,KAAKV,SCIV,CAAoB7B,CDJf,CAAiBtD,IAAjB,CAAT,KCII,KAAqC,KAAKP,KAA9C,EAAqD;AACnD,ADJH,AHQCsB,CGVF,CHUEA,OIJO8E,AJIA,CAAClE,WAAR,CAAoBV,CIJlB,CAAoBsC,GJItB,EAtC+C,CAwC/C,MINE,CAAiC,KAAK9D,KAAtC;AACD,ALZD,GKS0C,CAK1C,GLdK7B,eAAL,CAAqB,eAArB,EAAsC,KAAKD,OAA3C;AISFyG,AHSE,ADjBA,IIQE,CAAC1L,EHSE2G,ADjBAzB,OIQP,CAAeuH,KHSb,CAAmBxD,CDjBnB,CAAqB,GIQvB,GAA6B,GHS3B,CAA+BZ,MGTMf,CHSrC,ADjBA,EAAwC,CIQb,EAAgB,EJRErC,OAA7C;AISA,AHSD,ADjBC,CCzBF,KGiCM,CJRCC,IIQIwH,WJRT,CIQI,AJRiB,CIQCpF,IAAlB,CAAJ,EAA6B,cJR7B,EAA6C,KAAKnC,WAAlD,EAxCkD,CA0ClD;AKWA,ADJE,MCIE,KAAKyC,ADJA,ICIT,CDJcR,CCIC,IDJN,CAAWE,IAAI,CAAC3E,CAAhB,EAAmB2E,IAAI,CAACoB,CAAxB,CAAP;ACKA,ADJD,AHSHhC,ADhBE,GIKA,GJLItB,GKWG+H,ADJA,GHSG,CAACnN,SAAb,CILI,AJKmB6I,ADhBrB,CKWsBwC,CLXChG,UCgBzB,GILI,AJKkC,IDhBpC,MCgB8C6D,OAAV,EAAmBlI,OAAnB,EAA4B;AIJ/D,ADJC,AHSFkI,ADhBA,ECgBAA,CIPA,GLTI5D,GKWG,AJKA,CAAC6D,CGTC,IAAP,IJPe,GCgBjB,ADhBoB1I,CCgBC,OAArB,ADhB4B,CAAC8E,CCgBCvE,OAAO,CAACH,IAAR,CAAa,GAAb,CAA9B,IDhBoB,CAAgC,gBAAhC,EAAkD,CAAlD,CAApB;AKYE,ADJD,AHSF,ADfCyE,CCaF,CDbEA,OKUO6H,MLVM,CAAC5I,OKUZ,CAAoB2G,QLVtB,CAA+B,GKU7B,CAAiC,CLVCtH,IKUI6H,SAAL,EAAjC,ALVF,EAAqD,UAAUxH,KAAV,EAAiB;AKWrE,ADJF,AJNG,CIAJ,EAQA,KJRS,CAAC1D,MAAM,CAACmD,SAAP,CAAiBC,gBAAlB,IAAsCM,KAAK,CAACuB,OAAN,CAAcnE,MAAd,GAAuB,CAA9D,IACA4C,KAAK,CAACwB,aAAN,CAAoBpE,MAApB,GAA6B,CADjC,EACoC;ACexCqF,ADdM,YCcM,CAAC1G,ADf2B,CAC1B,QCcd,CAAuBoJ,iBAAvB,GAA2C,UAAUZ,QAAV,EAAoB;AIJ7D,AJKA,ADdG,OKSE4E,EJKE,MILP,CAAcpG,OAAd,CAAsB,KAAKC,IAA3B,EAAiC;AAC/BF,ADJJ2E,AHQW/I,IIJPoE,ADJA,AHQOpE,CGRN3C,AHQO,EAAEwI,EIJL,EAAO,GDJhB,CAAemE,AHQO,CIJD5F,AJIEpE,CAAT,GAAa,CILQ,AJK1B,IGRT,GAA4B,UAAUyF,IAAV,EAAgB;ACKxCR,ADJF,AHO4Bc,ADZ1B,IKSAd,AJG0Bc,CAAC,EGPxBtB,AHO0BoB,CIHzB,ALTAjI,EKSQ,EDJd,CAAW6H,CJLC,CKSOR,AJGoB,ADZ1BlE,CCY2BgF,CGPzB,AHOgB,CGPf/F,CCEiB,ADFjC,CHO4C,CGPzByF,GJLb,CIKiB,AJLAzE,CIKC+E,CAAxB,IAA6BN,IAA7B,MJLE,EAAuC;AKUvCN,ADJH,AHMQ,ADXH1C,CIGN,EHQE,CIFE0C,ELTE1C,CKSC,EAAS,KAAK0C,GAHc,MLNZ,GAAG7D,KAAK,CAACyB,KAA1B;AKUFgC,AJEH,ADXKrC,CCSN,GIAIqC,ELTErC,OKSO,EAAG,KAAK8H,GLTE,GAAGlJ,KAAK,CAAC0B,EKShB,CAAoBiF,ELT9B,UKSU,EAJmB;AAK/BjD,ADJJ+D,AJLK,IKSD/D,ADJA,CAAC3H,AJRD,MAGO,GKSG,ADJd,CAAe4M,CCIC,KAAKY,IDJrB,GAA4B,SCIZ,CDJsBpF,IAAV,EAAgB;ACDT,ADEjC,AHMF1B,ADXMtB,GKGJ,GLHIA,CIKCgC,KAAL,AHMU,CGNCgB,AHMApI,IGNI,CAAC2C,CAAhB,EAAmByF,CHMrB,CAAuBO,ADXA,EIKE,CAACD,AJLAzE,CIKxB,IAA6B,AJLA,CAACuB,GIK9B,CHMF,GAAuC,ADXb,CAAc,CAAd,EAAiBI,MCWM4C,CDX3C,OCWiC,EAAoB;AIA1D,ADLA,AHMCA,ADXInD,CKVN,ADaA,CHQEmD,CICF,GLZMnD,ICWI,GAAG,KAAK+D,KDXK,GAAGnF,KAAK,CAACuB,GCWnB,CAAuBgD,GDXV,CAAc,CAAd,EAAiB3C,CCW9B,CAAX,KDXI;ACYJ,ADXG,SCWI,mBAAmB2C,QAAQ,CAAC7F,CAA5B,GAAgC,GAAhC,GAAsC6F,QAAQ,CAACE,CAAtD;AGLFgD,AHMC,CAHD,GGHI,CAAC1L,SAAL,CAAe0M,YAAf,GAA8B,UAAUlE,QAAV,EAAoB;ACMlDsE,ADLE,AJLE7I,IAAAA,KIKKuE,AJLA,CAACxD,CKUC,CAAChF,KDLK,CAAC2C,CAAT,ECKT,CAAsB8I,CDLC,CAAd,AJLL,IIKwBjD,GCK5B,GAAkC,EDLE,CAAC7F,CAAT,GAAa,KCKK,ADLAgJ,IAArC,IACAnD,QAAQ,CAACE,CAAT,IAAc,CADd,IACmBF,QAAQ,CAACE,CAAT,GAAa,KAAKiD,IAD5C;ACMA,ADJD,AHKDjF,ADXG,CIGH,EJlBE,MKyBO,GJCG,CAAC1G,SAAb,CAAuBwH,WAAvB,GAAqC,UAAUT,KAAV,EAAiB;AIAlDE,AJCF,ADVA3B,EAAAA,EKSE2B,GJCGE,CIDC,EAAS,KAAKF,ALTP,CAAC1C,GKSC,CAAUkH,CJCzB,CAAoB,KAAK7E,EIDV,EADR,CLRP,CAA+B,KAAK/C,GCUpC,WDVA,EAAoD,UAAUI,KAAV,EAAiB;AKUnE8C,ADJJ2E,AHME,ADXEzH,IKSA8C,ADJA,AJLA9C,CIKCjE,CHMCqJ,GIFG,ALTA,CAACrE,CKSO,GDJjB,CAAeyG,CCIO1E,AJEN,GAAGA,EIJV,GDFT,AHMwB,ADXpB,GIKuB,AHMA,KAAKA,KAA9B,EGNqC;ACKnCa,ADJF,AHMA,ADXC,GAFD,CKWEA,EDJEiF,CHMC9F,CIFC,EAAS,EJEf,GIFoBa,ADJP,AHMAb,GGNG,CCCT,CDDP,AHMA;AIDEe,AJGF,ADXAxC,EAAAA,EKQEwC,GAAG,AJGAlB,EIHU,KAAKkB,CLRP,CAACvD,CKIP,IJOP,CAAoB+E,UDXpB,CCWA,ADX+B,GCWG,EDXExF,GCWGiD,KAAvC,KDXA,EAAmD,UAAU9C,KAAV,EAAiB;AKSlEkB,ADJF,AJJE,IKQAA,GDJG,CJJE,CAAC5E,EIICoC,CAAC,GCIG,ADJA,AJJC,CIId,AJJee,CKQA,CDJCf,CAAC,GCIGwC,ADJA,GJJZ,CAAiBxB,CIIAgI,IAAzB,EAA+BhJ,CAAC,EAAhC,EAAoC,IJJ7B,IAAsCsB,KAAK,CAACuB,OAAN,CAAcnE,MAAd,GAAuB,CAA9D,IACA4C,KAAK,CAACwB,aAAN,CAAoBpE,MAApB,GAA6B,CADjC,EACoC;AKE/B,ADEL,AHOF,ADVI,GKCJ,GJSIgI,EGPE0C,GAAG,EJJ6B,CII1Bc,AJHA,ECUE,GAAG,CAAjB,EAAoB,CGPC,CAAClK,CAAD,CAAT,GAAe,EAAzB;ACKH,AJGG,ADVC,CKDL,EAUA,KJCQ4G,QAAQ,GAAG9I,QAAQ,CAAC6H,aAAT,CAAuB,KAAvB,CAAf;AGNA,AHOAiB,IAAAA,KGPK,GHOG,CGPCb,AHOAI,CGPC,GAAG,CAAb,EAAgBJ,CAAC,CHOjB,CAAmBnH,CGPC,EHOpB,CAAuB,EGPEoK,IAAzB,EAA+BjD,CAAC,EAAhC,EAAoC,GHOpC;AGNEqD,AHOFxC,ADVA,ICUAA,EGPEwC,EJHEjG,CIGC,CAACnF,EHOE,CAAC2I,CGPP,CAAS,KAAKlC,GJHhB,CCUA,CGPW,AJHUrB,CIGCpD,CAAX,AHOY,EGPE+F,CAAd,GHOkBW,CGPC,KAAKjC,CJHnC,GCUA,CGP8B,CAAWzE,CAAX,EAAc+F,CAAd,EAAiB+C,SAAjB,EAAnB,GAAkD,IAA3D;ACKNqB,ADJK,AHQD,SAAKlG,EIJE,CAAC5G,SAAZ,CAAsB2N,CJIlB,CAAoB1E,UIJxB,CJII,CAAgCM,CIJC,OJIjC,KIJ6C;AAC/C,ADJC,AHQA,ADXC,OKOGtC,CLPC1G,GKON,CAAU8L,ELPE,CAAC3I,KKOb,CAAmB,GLPb,CAAiBC,MKOMhB,CAAV,EAAa+F,CAAb,EAAgBN,IAAhB,ALPjB,EKOuC,ALPA;AKQvC,AJIH,ADXKtC,CCJN,KDIMA,EKOEsC,IAAJ,EAAU,OLPO,GAAGnE,KAAK,CAACyB,KAAxB;AKQA0C,ADJJ,AJHIrC,MKOAqC,ALPArC,GIGG,CCIC,CAACgD,UAAL,ALPe,GKOG,ALPA9E,IKOlB,CLPuB,CAAC0B,KAAxB;AKQAyC,ADJFuD,AHQJjF,ADXK,IIGDiF,CJNA,CKUEvD,EDJE,ECIE,ADJA,CCICmD,ALPA,CCWC,CAACvL,EGRE2L,IADN,GHST,CIJM,AJIiBlE,eAAvB,GAAyC,UAAUC,SAAV,EAAqB;AIHzD,ADJDN,AHQF,ADXItB,IIGFsB,EJHEtB,CCWCe,EGRE,EAAEgG,SHQT,CAAmBvD,ADXA,GAAGrF,KAAK,CAAC+B,ECW5B,GAAiC0B,SAAjC,ADXsB,CAAqB,CAArB,EAAwB9B,OAA1C;AKQH,ADPM,AHWR,ADXKG,CCSN,EIPE,ADFA,GJAIA,eAAe,GAAG9B,KAAK,CAAC+B,cAAN,CAAqB,CAArB,EAAwBH,OAA1C;AKQL,ADJA,AJHI,CKAL,ADZA,ECqBA;AJGAa,YAAY,CAAC1G,SAAb,CAAuB6H,OAAvB,GAAiC,UAAUC,GAAV,EAAe;AAC9C,ADXE,MCWE0B,EDXEvD,ECWE,ADXA,GCWM6B,ADXHhC,GCWM,GAAG,SDXM,CCWT,EDXYV,CCWI,WAAjC,KDXE;AKQJ0H,AJIE,ADXE,MCWEjF,EDXE3B,GKOG,CAAClG,CJIC,ADXA,GCWG8H,ADXA3E,GCWG,CDXC,CKOpB,ALPqBgD,CKOCyH,AJIA,EDXN,CAAS3H,EAAT,CAAZ,EKOJ,EJImB,CIJc,EJIE,QIJQmC,IAAV,AJI/B,EIJ+Cd,IAAhB,EAAsB;AACrD,AJKA,ADXE,OKMGL,AJKAH,CDXCV,EAAE,CKMR,CAAUgB,CLNCrB,IKMX,CAAgBqC,IAAI,CAACzF,AJKrB,CILA,AJKsBmG,EILEV,ELNE,EKME,CAACM,ALNArD,CKM7B,CJKA,CAAgC9D,EILE,CJKlC,CAAoCiI,EILpC,EJKA,MDXE;AKOF,AJKA,ADXE,OKMGvC,AJKAH,CDXCT,GKMN,CAAUe,CLNC,GAAGjE,CKMd,CAAgBmE,ELNE,CAACnB,CKMC,CAACxD,AJKrB,CILA,AJKsB8G,ADXR,CAASrD,CKMCkB,CLNV,CAAZ,EKM0B,CAACoB,CAA7B,IAAkCN,IAAlC,IJKA,CAA2C,GAA3C,EAAgD,CAAhD,EAAmDkB,WAAnD,GAAiEzB,OAAjE;AIJAO,AJKD,CAND,CICEA,IAAI,CAACoD,cAAL,CAAoBlE,IAApB;AACD,ALNG,CKEJ,EAMA,KLRQnE,IAAI,CAACC,GAAL,CAAS8C,KAAT,EAAgBG,KAAhB,IAAyB,EAA7B,EAAiC;ACYrCK,ADXM,YCWM,CAAC1G,SAAb,CAAuBgI,YA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","file":"application.78bb5802.js","sourceRoot":"..","sourcesContent":["Function.prototype.bind = Function.prototype.bind || function (target) {\r\n  var self = this;\r\n  return function (args) {\r\n    if (!(args instanceof Array)) {\r\n      args = [args];\r\n    }\r\n    self.apply(target, args);\r\n  };\r\n};\r\n","(function () {\r\n  if (typeof window.Element === \"undefined\" ||\r\n      \"classList\" in document.documentElement) {\r\n    return;\r\n  }\r\n\r\n  var prototype = Array.prototype,\r\n      push = prototype.push,\r\n      splice = prototype.splice,\r\n      join = prototype.join;\r\n\r\n  function DOMTokenList(el) {\r\n    this.el = el;\r\n    // The className needs to be trimmed and split on whitespace\r\n    // to retrieve a list of classes.\r\n    var classes = el.className.replace(/^\\s+|\\s+$/g, '').split(/\\s+/);\r\n    for (var i = 0; i < classes.length; i++) {\r\n      push.call(this, classes[i]);\r\n    }\r\n  }\r\n\r\n  DOMTokenList.prototype = {\r\n    add: function (token) {\r\n      if (this.contains(token)) return;\r\n      push.call(this, token);\r\n      this.el.className = this.toString();\r\n    },\r\n    contains: function (token) {\r\n      return this.el.className.indexOf(token) != -1;\r\n    },\r\n    item: function (index) {\r\n      return this[index] || null;\r\n    },\r\n    remove: function (token) {\r\n      if (!this.contains(token)) return;\r\n      for (var i = 0; i < this.length; i++) {\r\n        if (this[i] == token) break;\r\n      }\r\n      splice.call(this, i, 1);\r\n      this.el.className = this.toString();\r\n    },\r\n    toString: function () {\r\n      return join.call(this, ' ');\r\n    },\r\n    toggle: function (token) {\r\n      if (!this.contains(token)) {\r\n        this.add(token);\r\n      } else {\r\n        this.remove(token);\r\n      }\r\n\r\n      return this.contains(token);\r\n    }\r\n  };\r\n\r\n  window.DOMTokenList = DOMTokenList;\r\n\r\n  function defineElementGetter(obj, prop, getter) {\r\n    if (Object.defineProperty) {\r\n      Object.defineProperty(obj, prop, {\r\n        get: getter\r\n      });\r\n    } else {\r\n      obj.__defineGetter__(prop, getter);\r\n    }\r\n  }\r\n\r\n  defineElementGetter(HTMLElement.prototype, 'classList', function () {\r\n    return new DOMTokenList(this);\r\n  });\r\n})();\r\n","(function () {\r\n  var lastTime = 0;\r\n  var vendors = ['webkit', 'moz'];\r\n  for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n    window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n    window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] ||\r\n      window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n  }\r\n\r\n  if (!window.requestAnimationFrame) {\r\n    window.requestAnimationFrame = function (callback) {\r\n      var currTime = new Date().getTime();\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n      var id = window.setTimeout(function () {\r\n        callback(currTime + timeToCall);\r\n      },\r\n      timeToCall);\r\n      lastTime = currTime + timeToCall;\r\n      return id;\r\n    };\r\n  }\r\n\r\n  if (!window.cancelAnimationFrame) {\r\n    window.cancelAnimationFrame = function (id) {\r\n      clearTimeout(id);\r\n    };\r\n  }\r\n}());\r\n","export function KeyboardInputManager() {\r\n  this.events = {};\r\n\r\n  if (window.navigator.msPointerEnabled) {\r\n    //Internet Explorer 10 style\r\n    this.eventTouchstart    = \"MSPointerDown\";\r\n    this.eventTouchmove     = \"MSPointerMove\";\r\n    this.eventTouchend      = \"MSPointerUp\";\r\n  } else {\r\n    this.eventTouchstart    = \"touchstart\";\r\n    this.eventTouchmove     = \"touchmove\";\r\n    this.eventTouchend      = \"touchend\";\r\n  }\r\n\r\n  this.listen();\r\n}\r\n\r\nKeyboardInputManager.prototype.on = function (event, callback) {\r\n  if (!this.events[event]) {\r\n    this.events[event] = [];\r\n  }\r\n  this.events[event].push(callback);\r\n};\r\n\r\nKeyboardInputManager.prototype.emit = function (event, data) {\r\n  var callbacks = this.events[event];\r\n  if (callbacks) {\r\n    callbacks.forEach(function (callback) {\r\n      callback(data);\r\n    });\r\n  }\r\n};\r\n\r\nKeyboardInputManager.prototype.listen = function () {\r\n  var self = this;\r\n\r\n  var map = {\r\n    38: 0, // Up\r\n    39: 1, // Right\r\n    40: 2, // Down\r\n    37: 3, // Left\r\n    75: 0, // Vim up\r\n    76: 1, // Vim right\r\n    74: 2, // Vim down\r\n    72: 3, // Vim left\r\n    87: 0, // W\r\n    68: 1, // D\r\n    83: 2, // S\r\n    65: 3  // A\r\n  };\r\n\r\n  // Respond to direction keys\r\n  document.addEventListener(\"keydown\", function (event) {\r\n    var modifiers = event.altKey || event.ctrlKey || event.metaKey ||\r\n                    event.shiftKey;\r\n    var mapped    = map[event.which];\r\n\r\n    if (!modifiers) {\r\n      if (mapped !== undefined) {\r\n        event.preventDefault();\r\n        self.emit(\"move\", mapped);\r\n      }\r\n    }\r\n\r\n    // R key restarts the game\r\n    if (!modifiers && event.which === 82) {\r\n      self.restart.call(self, event);\r\n    }\r\n  });\r\n\r\n  // Respond to button presses\r\n  this.bindButtonPress(\".retry-button\", this.restart);\r\n  this.bindButtonPress(\".restart-button\", this.restart);\r\n  this.bindButtonPress(\".keep-playing-button\", this.keepPlaying);\r\n\r\n  // Respond to swipe events\r\n  var touchStartClientX, touchStartClientY;\r\n  var gameContainer = document.getElementsByClassName(\"game-container\")[0];\r\n\r\n  gameContainer.addEventListener(this.eventTouchstart, function (event) {\r\n    if ((!window.navigator.msPointerEnabled && event.touches.length > 1) ||\r\n        event.targetTouches.length > 1) {\r\n      return; // Ignore if touching with more than 1 finger\r\n    }\r\n\r\n    if (window.navigator.msPointerEnabled) {\r\n      touchStartClientX = event.pageX;\r\n      touchStartClientY = event.pageY;\r\n    } else {\r\n      touchStartClientX = event.touches[0].clientX;\r\n      touchStartClientY = event.touches[0].clientY;\r\n    }\r\n\r\n    event.preventDefault();\r\n  });\r\n\r\n  gameContainer.addEventListener(this.eventTouchmove, function (event) {\r\n    event.preventDefault();\r\n  });\r\n\r\n  gameContainer.addEventListener(this.eventTouchend, function (event) {\r\n    if ((!window.navigator.msPointerEnabled && event.touches.length > 0) ||\r\n        event.targetTouches.length > 0) {\r\n      return; // Ignore if still touching with one or more fingers\r\n    }\r\n\r\n    var touchEndClientX, touchEndClientY;\r\n\r\n    if (window.navigator.msPointerEnabled) {\r\n      touchEndClientX = event.pageX;\r\n      touchEndClientY = event.pageY;\r\n    } else {\r\n      touchEndClientX = event.changedTouches[0].clientX;\r\n      touchEndClientY = event.changedTouches[0].clientY;\r\n    }\r\n\r\n    var dx = touchEndClientX - touchStartClientX;\r\n    var absDx = Math.abs(dx);\r\n\r\n    var dy = touchEndClientY - touchStartClientY;\r\n    var absDy = Math.abs(dy);\r\n\r\n    if (Math.max(absDx, absDy) > 10) {\r\n      // (right : left) : (down : up)\r\n      self.emit(\"move\", absDx > absDy ? (dx > 0 ? 1 : 3) : (dy > 0 ? 2 : 0));\r\n    }\r\n  });\r\n};\r\n\r\nKeyboardInputManager.prototype.restart = function (event) {\r\n  event.preventDefault();\r\n  this.emit(\"restart\");\r\n};\r\n\r\nKeyboardInputManager.prototype.keepPlaying = function (event) {\r\n  event.preventDefault();\r\n  this.emit(\"keepPlaying\");\r\n};\r\n\r\nKeyboardInputManager.prototype.bindButtonPress = function (selector, fn) {\r\n  var button = document.querySelector(selector);\r\n  button.addEventListener(\"click\", fn.bind(this));\r\n  button.addEventListener(this.eventTouchend, fn.bind(this));\r\n};\r\n","export function HTMLActuator() {\r\n  this.tileContainer    = document.querySelector(\".tile-container\");\r\n  this.scoreContainer   = document.querySelector(\".score-container\");\r\n  this.bestContainer    = document.querySelector(\".best-container\");\r\n  this.messageContainer = document.querySelector(\".game-message\");\r\n\r\n  this.score = 0;\r\n}\r\n\r\nHTMLActuator.prototype.actuate = function (grid, metadata) {\r\n  var self = this;\r\n\r\n  window.requestAnimationFrame(function () {\r\n    self.clearContainer(self.tileContainer);\r\n\r\n    grid.cells.forEach(function (column) {\r\n      column.forEach(function (cell) {\r\n        if (cell) {\r\n          self.addTile(cell);\r\n        }\r\n      });\r\n    });\r\n\r\n    self.updateScore(metadata.score);\r\n    self.updateBestScore(metadata.bestScore);\r\n\r\n    if (metadata.terminated) {\r\n      if (metadata.over) {\r\n        self.message(false); // You lose\r\n      } else if (metadata.won) {\r\n        self.message(true); // You win!\r\n      }\r\n    }\r\n\r\n  });\r\n};\r\n\r\n// Continues the game (both restart and keep playing)\r\nHTMLActuator.prototype.continueGame = function () {\r\n  this.clearMessage();\r\n};\r\n\r\nHTMLActuator.prototype.clearContainer = function (container) {\r\n  while (container.firstChild) {\r\n    container.removeChild(container.firstChild);\r\n  }\r\n};\r\n\r\nHTMLActuator.prototype.addTile = function (tile) {\r\n  var self = this;\r\n\r\n  var wrapper   = document.createElement(\"div\");\r\n  var inner     = document.createElement(\"div\");\r\n  var position  = tile.previousPosition || { x: tile.x, y: tile.y };\r\n  var positionClass = this.positionClass(position);\r\n\r\n  // We can't use classlist because it somehow glitches when replacing classes\r\n  var classes = [\"tile\", \"tile-\" + tile.value, positionClass];\r\n\r\n  if (tile.value > 2048) classes.push(\"tile-super\");\r\n\r\n  this.applyClasses(wrapper, classes);\r\n\r\n  inner.classList.add(\"tile-inner\");\r\n  // inner.textContent = tile.value;\r\n\r\n  if (tile.previousPosition) {\r\n    // Make sure that the tile gets rendered in the previous position first\r\n    window.requestAnimationFrame(function () {\r\n      classes[2] = self.positionClass({ x: tile.x, y: tile.y });\r\n      self.applyClasses(wrapper, classes); // Update the position\r\n    });\r\n  } else if (tile.mergedFrom) {\r\n    classes.push(\"tile-merged\");\r\n    this.applyClasses(wrapper, classes);\r\n\r\n    // Render the tiles that merged\r\n    tile.mergedFrom.forEach(function (merged) {\r\n      self.addTile(merged);\r\n    });\r\n  } else {\r\n    classes.push(\"tile-new\");\r\n    this.applyClasses(wrapper, classes);\r\n  }\r\n\r\n  // Add the inner part of the tile to the wrapper\r\n  wrapper.appendChild(inner);\r\n\r\n  // Put the tile on the board\r\n  this.tileContainer.appendChild(wrapper);\r\n};\r\n\r\nHTMLActuator.prototype.applyClasses = function (element, classes) {\r\n  element.setAttribute(\"class\", classes.join(\" \"));\r\n};\r\n\r\nHTMLActuator.prototype.normalizePosition = function (position) {\r\n  return { x: position.x + 1, y: position.y + 1 };\r\n};\r\n\r\nHTMLActuator.prototype.positionClass = function (position) {\r\n  position = this.normalizePosition(position);\r\n  return \"tile-position-\" + position.x + \"-\" + position.y;\r\n};\r\n\r\nHTMLActuator.prototype.updateScore = function (score) {\r\n  this.clearContainer(this.scoreContainer);\r\n\r\n  var difference = score - this.score;\r\n  this.score = score;\r\n\r\n  this.scoreContainer.textContent = this.score;\r\n\r\n  if (difference > 0) {\r\n    var addition = document.createElement(\"div\");\r\n    addition.classList.add(\"score-addition\");\r\n    addition.textContent = \"+\" + difference;\r\n\r\n    this.scoreContainer.appendChild(addition);\r\n  }\r\n};\r\n\r\nHTMLActuator.prototype.updateBestScore = function (bestScore) {\r\n  this.bestContainer.textContent = bestScore;\r\n};\r\n\r\nHTMLActuator.prototype.message = function (won) {\r\n  var type    = won ? \"game-won\" : \"game-over\";\r\n  var message = won ? \"You win!\" : \"Game over!\";\r\n\r\n  this.messageContainer.classList.add(type);\r\n  this.messageContainer.getElementsByTagName(\"p\")[0].textContent = message;\r\n};\r\n\r\nHTMLActuator.prototype.clearMessage = function () {\r\n  // IE only takes one value to remove at a time.\r\n  this.messageContainer.classList.remove(\"game-won\");\r\n  this.messageContainer.classList.remove(\"game-over\");\r\n};\r\n","window.fakeStorage = {\r\n  _data: {},\r\n\r\n  setItem: function (id, val) {\r\n    return this._data[id] = String(val);\r\n  },\r\n\r\n  getItem: function (id) {\r\n    return this._data.hasOwnProperty(id) ? this._data[id] : undefined;\r\n  },\r\n\r\n  removeItem: function (id) {\r\n    return delete this._data[id];\r\n  },\r\n\r\n  clear: function () {\r\n    return this._data = {};\r\n  }\r\n};\r\n\r\nexport function LocalStorageManager() {\r\n  this.bestScoreKey     = \"bestScore\";\r\n  this.gameStateKey     = \"gameState\";\r\n\r\n  var supported = this.localStorageSupported();\r\n  this.storage = supported ? window.localStorage : window.fakeStorage;\r\n}\r\n\r\nLocalStorageManager.prototype.localStorageSupported = function () {\r\n  var testKey = \"test\";\r\n\r\n  try {\r\n    var storage = window.localStorage;\r\n    storage.setItem(testKey, \"1\");\r\n    storage.removeItem(testKey);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n};\r\n\r\n// Best score getters/setters\r\nLocalStorageManager.prototype.getBestScore = function () {\r\n  return this.storage.getItem(this.bestScoreKey) || 0;\r\n};\r\n\r\nLocalStorageManager.prototype.setBestScore = function (score) {\r\n  this.storage.setItem(this.bestScoreKey, score);\r\n};\r\n\r\n// Game state getters/setters and clearing\r\nLocalStorageManager.prototype.getGameState = function () {\r\n  var stateJSON = this.storage.getItem(this.gameStateKey);\r\n  return stateJSON ? JSON.parse(stateJSON) : null;\r\n};\r\n\r\nLocalStorageManager.prototype.setGameState = function (gameState) {\r\n  this.storage.setItem(this.gameStateKey, JSON.stringify(gameState));\r\n};\r\n\r\nLocalStorageManager.prototype.clearGameState = function () {\r\n  this.storage.removeItem(this.gameStateKey);\r\n};\r\n","export function Tile(position, value) {\r\n  this.x                = position.x;\r\n  this.y                = position.y;\r\n  this.value            = value || 2;\r\n\r\n  this.previousPosition = null;\r\n  this.mergedFrom       = null; // Tracks tiles that merged together\r\n}\r\n\r\nTile.prototype.savePosition = function () {\r\n  this.previousPosition = { x: this.x, y: this.y };\r\n};\r\n\r\nTile.prototype.updatePosition = function (position) {\r\n  this.x = position.x;\r\n  this.y = position.y;\r\n};\r\n\r\nTile.prototype.serialize = function () {\r\n  return {\r\n    position: {\r\n      x: this.x,\r\n      y: this.y\r\n    },\r\n    value: this.value\r\n  };\r\n};\r\n","import { Tile } from './tile'\r\nexport function Grid(size, previousState) {\r\n  this.size = size;\r\n  this.cells = previousState ? this.fromState(previousState) : this.empty();\r\n}\r\n\r\n// Build a grid of the specified size\r\nGrid.prototype.empty = function () {\r\n  var cells = [];\r\n\r\n  for (var x = 0; x < this.size; x++) {\r\n    var row = cells[x] = [];\r\n\r\n    for (var y = 0; y < this.size; y++) {\r\n      row.push(null);\r\n    }\r\n  }\r\n\r\n  return cells;\r\n};\r\n\r\nGrid.prototype.fromState = function (state) {\r\n  var cells = [];\r\n\r\n  for (var x = 0; x < this.size; x++) {\r\n    var row = cells[x] = [];\r\n\r\n    for (var y = 0; y < this.size; y++) {\r\n      var tile = state[x][y];\r\n      row.push(tile ? new Tile(tile.position, tile.value) : null);\r\n    }\r\n  }\r\n\r\n  return cells;\r\n};\r\n\r\n// Find the first available random position\r\nGrid.prototype.randomAvailableCell = function () {\r\n  var cells = this.availableCells();\r\n\r\n  if (cells.length) {\r\n    return cells[Math.floor(Math.random() * cells.length)];\r\n  }\r\n};\r\n\r\nGrid.prototype.availableCells = function () {\r\n  var cells = [];\r\n\r\n  this.eachCell(function (x, y, tile) {\r\n    if (!tile) {\r\n      cells.push({ x: x, y: y });\r\n    }\r\n  });\r\n\r\n  return cells;\r\n};\r\n\r\n// Call callback for every cell\r\nGrid.prototype.eachCell = function (callback) {\r\n  for (var x = 0; x < this.size; x++) {\r\n    for (var y = 0; y < this.size; y++) {\r\n      callback(x, y, this.cells[x][y]);\r\n    }\r\n  }\r\n};\r\n\r\n// Check if there are any cells available\r\nGrid.prototype.cellsAvailable = function () {\r\n  return !!this.availableCells().length;\r\n};\r\n\r\n// Check if the specified cell is taken\r\nGrid.prototype.cellAvailable = function (cell) {\r\n  return !this.cellOccupied(cell);\r\n};\r\n\r\nGrid.prototype.cellOccupied = function (cell) {\r\n  return !!this.cellContent(cell);\r\n};\r\n\r\nGrid.prototype.cellContent = function (cell) {\r\n  if (this.withinBounds(cell)) {\r\n    return this.cells[cell.x][cell.y];\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\n// Inserts a tile at its position\r\nGrid.prototype.insertTile = function (tile) {\r\n  this.cells[tile.x][tile.y] = tile;\r\n};\r\n\r\nGrid.prototype.removeTile = function (tile) {\r\n  this.cells[tile.x][tile.y] = null;\r\n};\r\n\r\nGrid.prototype.withinBounds = function (position) {\r\n  return position.x >= 0 && position.x < this.size &&\r\n         position.y >= 0 && position.y < this.size;\r\n};\r\n\r\nGrid.prototype.serialize = function () {\r\n  var cellState = [];\r\n\r\n  for (var x = 0; x < this.size; x++) {\r\n    var row = cellState[x] = [];\r\n\r\n    for (var y = 0; y < this.size; y++) {\r\n      row.push(this.cells[x][y] ? this.cells[x][y].serialize() : null);\r\n    }\r\n  }\r\n\r\n  return {\r\n    size: this.size,\r\n    cells: cellState\r\n  };\r\n};\r\n","import { Grid } from './grid'\r\nimport { Tile } from './tile'\r\nexport function GameManager(size, InputManager, Actuator, StorageManager) {\r\n  this.size           = size; // Size of the grid\r\n  this.inputManager   = new InputManager;\r\n  this.storageManager = new StorageManager;\r\n  this.actuator       = new Actuator;\r\n\r\n  this.startTiles     = 2;\r\n\r\n  this.inputManager.on(\"move\", this.move.bind(this));\r\n  this.inputManager.on(\"restart\", this.restart.bind(this));\r\n  this.inputManager.on(\"keepPlaying\", this.keepPlaying.bind(this));\r\n\r\n  this.setup();\r\n}\r\n\r\n// Restart the game\r\nGameManager.prototype.restart = function () {\r\n  this.storageManager.clearGameState();\r\n  this.actuator.continueGame(); // Clear the game won/lost message\r\n  this.setup();\r\n};\r\n\r\n// Keep playing after winning (allows going over 2048)\r\nGameManager.prototype.keepPlaying = function () {\r\n  this.keepPlaying = false;\r\n  this.actuator.continueGame(); // Clear the game won/lost message\r\n};\r\n\r\n// Return true if the game is lost, or has won and the user hasn't kept playing\r\nGameManager.prototype.isGameTerminated = function () {\r\n  return this.over || (this.won && !this.keepPlaying);\r\n};\r\n\r\n// Set up the game\r\nGameManager.prototype.setup = function () {\r\n  var previousState = this.storageManager.getGameState();\r\n\r\n  // Reload the game from a previous game if present\r\n  if (previousState) {\r\n    this.grid        = new Grid(previousState.grid.size,\r\n                                previousState.grid.cells); // Reload grid\r\n    this.score       = previousState.score;\r\n    this.over        = previousState.over;\r\n    this.won         = previousState.won;\r\n    this.keepPlaying = previousState.keepPlaying;\r\n  } else {\r\n    this.grid        = new Grid(this.size);\r\n    this.score       = 0;\r\n    this.over        = false;\r\n    this.won         = false;\r\n    this.keepPlaying = false;\r\n\r\n    // Add the initial tiles\r\n    this.addStartTiles();\r\n  }\r\n\r\n  // Update the actuator\r\n  this.actuate();\r\n};\r\n\r\n// Set up the initial tiles to start the game with\r\nGameManager.prototype.addStartTiles = function () {\r\n  for (var i = 0; i < this.startTiles; i++) {\r\n    this.addRandomTile();\r\n  }\r\n};\r\n\r\n// Adds a tile in a random position\r\nGameManager.prototype.addRandomTile = function () {\r\n  if (this.grid.cellsAvailable()) {\r\n    var value = Math.random() < 0.9 ? 2 : 4;\r\n    var tile = new Tile(this.grid.randomAvailableCell(), value);\r\n\r\n    this.grid.insertTile(tile);\r\n  }\r\n};\r\n\r\n// Sends the updated grid to the actuator\r\nGameManager.prototype.actuate = function () {\r\n  if (this.storageManager.getBestScore() < this.score) {\r\n    this.storageManager.setBestScore(this.score);\r\n  }\r\n\r\n  // Clear the state when the game is over (game over only, not win)\r\n  if (this.over) {\r\n    this.storageManager.clearGameState();\r\n  } else {\r\n    this.storageManager.setGameState(this.serialize());\r\n  }\r\n\r\n  this.actuator.actuate(this.grid, {\r\n    score:      this.score,\r\n    over:       this.over,\r\n    won:        this.won,\r\n    bestScore:  this.storageManager.getBestScore(),\r\n    terminated: this.isGameTerminated()\r\n  });\r\n\r\n};\r\n\r\n// Represent the current game as an object\r\nGameManager.prototype.serialize = function () {\r\n  return {\r\n    grid:        this.grid.serialize(),\r\n    score:       this.score,\r\n    over:        this.over,\r\n    won:         this.won,\r\n    keepPlaying: this.keepPlaying\r\n  };\r\n};\r\n\r\n// Save all tile positions and remove merger info\r\nGameManager.prototype.prepareTiles = function () {\r\n  this.grid.eachCell(function (x, y, tile) {\r\n    if (tile) {\r\n      tile.mergedFrom = null;\r\n      tile.savePosition();\r\n    }\r\n  });\r\n};\r\n\r\n// Move a tile and its representation\r\nGameManager.prototype.moveTile = function (tile, cell) {\r\n  this.grid.cells[tile.x][tile.y] = null;\r\n  this.grid.cells[cell.x][cell.y] = tile;\r\n  tile.updatePosition(cell);\r\n};\r\n\r\n// Move tiles on the grid in the specified direction\r\nGameManager.prototype.move = function (direction) {\r\n  // 0: up, 1: right, 2: down, 3: left\r\n  var self = this;\r\n\r\n  if (this.isGameTerminated()) return; // Don't do anything if the game's over\r\n\r\n  var cell, tile;\r\n\r\n  var vector     = this.getVector(direction);\r\n  var traversals = this.buildTraversals(vector);\r\n  var moved      = false;\r\n\r\n  // Save the current tile positions and remove merger information\r\n  this.prepareTiles();\r\n\r\n  // Traverse the grid in the right direction and move tiles\r\n  traversals.x.forEach(function (x) {\r\n    traversals.y.forEach(function (y) {\r\n      cell = { x: x, y: y };\r\n      tile = self.grid.cellContent(cell);\r\n\r\n      if (tile) {\r\n        var positions = self.findFarthestPosition(cell, vector);\r\n        var next      = self.grid.cellContent(positions.next);\r\n\r\n        // Only one merger per row traversal?\r\n        if (next && next.value === tile.value && !next.mergedFrom) {\r\n          var merged = new Tile(positions.next, tile.value * 2);\r\n          merged.mergedFrom = [tile, next];\r\n\r\n          self.grid.insertTile(merged);\r\n          self.grid.removeTile(tile);\r\n\r\n          // Converge the two tiles' positions\r\n          tile.updatePosition(positions.next);\r\n\r\n          // Update the score\r\n          self.score += merged.value;\r\n\r\n          // The mighty 2048 tile\r\n          if (merged.value === 2048) self.won = true;\r\n        } else {\r\n          self.moveTile(tile, positions.farthest);\r\n        }\r\n\r\n        if (!self.positionsEqual(cell, tile)) {\r\n          moved = true; // The tile moved from its original cell!\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  if (moved) {\r\n    this.addRandomTile();\r\n\r\n    if (!this.movesAvailable()) {\r\n      this.over = true; // Game over!\r\n    }\r\n\r\n    this.actuate();\r\n  }\r\n};\r\n\r\n// Get the vector representing the chosen direction\r\nGameManager.prototype.getVector = function (direction) {\r\n  // Vectors representing tile movement\r\n  var map = {\r\n    0: { x: 0,  y: -1 }, // Up\r\n    1: { x: 1,  y: 0 },  // Right\r\n    2: { x: 0,  y: 1 },  // Down\r\n    3: { x: -1, y: 0 }   // Left\r\n  };\r\n\r\n  return map[direction];\r\n};\r\n\r\n// Build a list of positions to traverse in the right order\r\nGameManager.prototype.buildTraversals = function (vector) {\r\n  var traversals = { x: [], y: [] };\r\n\r\n  for (var pos = 0; pos < this.size; pos++) {\r\n    traversals.x.push(pos);\r\n    traversals.y.push(pos);\r\n  }\r\n\r\n  // Always traverse from the farthest cell in the chosen direction\r\n  if (vector.x === 1) traversals.x = traversals.x.reverse();\r\n  if (vector.y === 1) traversals.y = traversals.y.reverse();\r\n\r\n  return traversals;\r\n};\r\n\r\nGameManager.prototype.findFarthestPosition = function (cell, vector) {\r\n  var previous;\r\n\r\n  // Progress towards the vector direction until an obstacle is found\r\n  do {\r\n    previous = cell;\r\n    cell     = { x: previous.x + vector.x, y: previous.y + vector.y };\r\n  } while (this.grid.withinBounds(cell) &&\r\n           this.grid.cellAvailable(cell));\r\n\r\n  return {\r\n    farthest: previous,\r\n    next: cell // Used to check if a merge is required\r\n  };\r\n};\r\n\r\nGameManager.prototype.movesAvailable = function () {\r\n  return this.grid.cellsAvailable() || this.tileMatchesAvailable();\r\n};\r\n\r\n// Check for available matches between tiles (more expensive check)\r\nGameManager.prototype.tileMatchesAvailable = function () {\r\n  var self = this;\r\n\r\n  var tile;\r\n\r\n  for (var x = 0; x < this.size; x++) {\r\n    for (var y = 0; y < this.size; y++) {\r\n      tile = this.grid.cellContent({ x: x, y: y });\r\n\r\n      if (tile) {\r\n        for (var direction = 0; direction < 4; direction++) {\r\n          var vector = self.getVector(direction);\r\n          var cell   = { x: x + vector.x, y: y + vector.y };\r\n\r\n          var other  = self.grid.cellContent(cell);\r\n\r\n          if (other && other.value === tile.value) {\r\n            return true; // These two tiles can be merged\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nGameManager.prototype.positionsEqual = function (first, second) {\r\n  return first.x === second.x && first.y === second.y;\r\n};\r\n","import './bind_polyfill'\r\nimport './classlist_polyfill'\r\nimport './animframe_polyfill'\r\nimport { KeyboardInputManager } from './keyboard_input_manager';\r\nimport { HTMLActuator } from './html_actuator';\r\nimport { LocalStorageManager } from './local_storage_manager';\r\nimport { GameManager } from './game_manager';\r\n\r\n// Wait till the browser is ready to render the game (avoids glitches)\r\nwindow.requestAnimationFrame(function () {\r\n  new GameManager(4, KeyboardInputManager, HTMLActuator, LocalStorageManager);\r\n});\r\n"]}