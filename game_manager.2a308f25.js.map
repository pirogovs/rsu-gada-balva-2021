{"version":3,"sources":["js/tile.js","js/grid.js","js/game_manager.js","../../../AppData/Local/Yarn/Data/global/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["Tile","position","value","x","y","previousPosition","mergedFrom","prototype","savePosition","updatePosition","serialize","Grid","size","previousState","cells","fromState","empty","row","push","state","tile","randomAvailableCell","availableCells","length","Math","floor","random","eachCell","callback","cellsAvailable","cellAvailable","cell","cellOccupied","cellContent","withinBounds","insertTile","removeTile","cellState","GameManager","InputManager","Actuator","StorageManager","inputManager","storageManager","actuator","startTiles","on","move","bind","restart","keepPlaying","setup","clearGameState","continueGame","isGameTerminated","over","won","getGameState","grid","score","addStartTiles","actuate","i","addRandomTile","getBestScore","setBestScore","setGameState","bestScore","terminated","prepareTiles","moveTile","direction","self","vector","getVector","traversals","buildTraversals","moved","forEach","positions","findFarthestPosition","next","merged","farthest","positionsEqual","movesAvailable","map","pos","reverse","previous","tileMatchesAvailable","other","first","second","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"game_manager.2a308f25.js","sourceRoot":"..","sourcesContent":["export function Tile(position, value) {\r\n  this.x                = position.x;\r\n  this.y                = position.y;\r\n  this.value            = value || 2;\r\n\r\n  this.previousPosition = null;\r\n  this.mergedFrom       = null; // Tracks tiles that merged together\r\n}\r\n\r\nTile.prototype.savePosition = function () {\r\n  this.previousPosition = { x: this.x, y: this.y };\r\n};\r\n\r\nTile.prototype.updatePosition = function (position) {\r\n  this.x = position.x;\r\n  this.y = position.y;\r\n};\r\n\r\nTile.prototype.serialize = function () {\r\n  return {\r\n    position: {\r\n      x: this.x,\r\n      y: this.y\r\n    },\r\n    value: this.value\r\n  };\r\n};\r\n","import { Tile } from './tile'\r\nexport function Grid(size, previousState) {\r\n  this.size = size;\r\n  this.cells = previousState ? this.fromState(previousState) : this.empty();\r\n}\r\n\r\n// Build a grid of the specified size\r\nGrid.prototype.empty = function () {\r\n  var cells = [];\r\n\r\n  for (var x = 0; x < this.size; x++) {\r\n    var row = cells[x] = [];\r\n\r\n    for (var y = 0; y < this.size; y++) {\r\n      row.push(null);\r\n    }\r\n  }\r\n\r\n  return cells;\r\n};\r\n\r\nGrid.prototype.fromState = function (state) {\r\n  var cells = [];\r\n\r\n  for (var x = 0; x < this.size; x++) {\r\n    var row = cells[x] = [];\r\n\r\n    for (var y = 0; y < this.size; y++) {\r\n      var tile = state[x][y];\r\n      row.push(tile ? new Tile(tile.position, tile.value) : null);\r\n    }\r\n  }\r\n\r\n  return cells;\r\n};\r\n\r\n// Find the first available random position\r\nGrid.prototype.randomAvailableCell = function () {\r\n  var cells = this.availableCells();\r\n\r\n  if (cells.length) {\r\n    return cells[Math.floor(Math.random() * cells.length)];\r\n  }\r\n};\r\n\r\nGrid.prototype.availableCells = function () {\r\n  var cells = [];\r\n\r\n  this.eachCell(function (x, y, tile) {\r\n    if (!tile) {\r\n      cells.push({ x: x, y: y });\r\n    }\r\n  });\r\n\r\n  return cells;\r\n};\r\n\r\n// Call callback for every cell\r\nGrid.prototype.eachCell = function (callback) {\r\n  for (var x = 0; x < this.size; x++) {\r\n    for (var y = 0; y < this.size; y++) {\r\n      callback(x, y, this.cells[x][y]);\r\n    }\r\n  }\r\n};\r\n\r\n// Check if there are any cells available\r\nGrid.prototype.cellsAvailable = function () {\r\n  return !!this.availableCells().length;\r\n};\r\n\r\n// Check if the specified cell is taken\r\nGrid.prototype.cellAvailable = function (cell) {\r\n  return !this.cellOccupied(cell);\r\n};\r\n\r\nGrid.prototype.cellOccupied = function (cell) {\r\n  return !!this.cellContent(cell);\r\n};\r\n\r\nGrid.prototype.cellContent = function (cell) {\r\n  if (this.withinBounds(cell)) {\r\n    return this.cells[cell.x][cell.y];\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\n// Inserts a tile at its position\r\nGrid.prototype.insertTile = function (tile) {\r\n  this.cells[tile.x][tile.y] = tile;\r\n};\r\n\r\nGrid.prototype.removeTile = function (tile) {\r\n  this.cells[tile.x][tile.y] = null;\r\n};\r\n\r\nGrid.prototype.withinBounds = function (position) {\r\n  return position.x >= 0 && position.x < this.size &&\r\n         position.y >= 0 && position.y < this.size;\r\n};\r\n\r\nGrid.prototype.serialize = function () {\r\n  var cellState = [];\r\n\r\n  for (var x = 0; x < this.size; x++) {\r\n    var row = cellState[x] = [];\r\n\r\n    for (var y = 0; y < this.size; y++) {\r\n      row.push(this.cells[x][y] ? this.cells[x][y].serialize() : null);\r\n    }\r\n  }\r\n\r\n  return {\r\n    size: this.size,\r\n    cells: cellState\r\n  };\r\n};\r\n","import { Grid } from './grid'\r\nimport { Tile } from './tile'\r\nexport function GameManager(size, InputManager, Actuator, StorageManager) {\r\n  this.size           = size; // Size of the grid\r\n  this.inputManager   = new InputManager;\r\n  this.storageManager = new StorageManager;\r\n  this.actuator       = new Actuator;\r\n\r\n  this.startTiles     = 2;\r\n\r\n  this.inputManager.on(\"move\", this.move.bind(this));\r\n  this.inputManager.on(\"restart\", this.restart.bind(this));\r\n  this.inputManager.on(\"keepPlaying\", this.keepPlaying.bind(this));\r\n\r\n  this.setup();\r\n}\r\n\r\n// Restart the game\r\nGameManager.prototype.restart = function () {\r\n  this.storageManager.clearGameState();\r\n  this.actuator.continueGame(); // Clear the game won/lost message\r\n  this.setup();\r\n};\r\n\r\n// Keep playing after winning (allows going over 2048)\r\nGameManager.prototype.keepPlaying = function () {\r\n  this.keepPlaying = false;\r\n  this.actuator.continueGame(); // Clear the game won/lost message\r\n};\r\n\r\n// Return true if the game is lost, or has won and the user hasn't kept playing\r\nGameManager.prototype.isGameTerminated = function () {\r\n  return this.over || (this.won && !this.keepPlaying);\r\n};\r\n\r\n// Set up the game\r\nGameManager.prototype.setup = function () {\r\n  var previousState = this.storageManager.getGameState();\r\n\r\n  // Reload the game from a previous game if present\r\n  if (previousState) {\r\n    this.grid        = new Grid(previousState.grid.size,\r\n                                previousState.grid.cells); // Reload grid\r\n    this.score       = previousState.score;\r\n    this.over        = previousState.over;\r\n    this.won         = previousState.won;\r\n    this.keepPlaying = previousState.keepPlaying;\r\n  } else {\r\n    this.grid        = new Grid(this.size);\r\n    this.score       = 0;\r\n    this.over        = false;\r\n    this.won         = false;\r\n    this.keepPlaying = false;\r\n\r\n    // Add the initial tiles\r\n    this.addStartTiles();\r\n  }\r\n\r\n  // Update the actuator\r\n  this.actuate();\r\n};\r\n\r\n// Set up the initial tiles to start the game with\r\nGameManager.prototype.addStartTiles = function () {\r\n  for (var i = 0; i < this.startTiles; i++) {\r\n    this.addRandomTile();\r\n  }\r\n};\r\n\r\n// Adds a tile in a random position\r\nGameManager.prototype.addRandomTile = function () {\r\n  if (this.grid.cellsAvailable()) {\r\n    var value = Math.random() < 0.9 ? 2 : 4;\r\n    var tile = new Tile(this.grid.randomAvailableCell(), value);\r\n\r\n    this.grid.insertTile(tile);\r\n  }\r\n};\r\n\r\n// Sends the updated grid to the actuator\r\nGameManager.prototype.actuate = function () {\r\n  if (this.storageManager.getBestScore() < this.score) {\r\n    this.storageManager.setBestScore(this.score);\r\n  }\r\n\r\n  // Clear the state when the game is over (game over only, not win)\r\n  if (this.over) {\r\n    this.storageManager.clearGameState();\r\n  } else {\r\n    this.storageManager.setGameState(this.serialize());\r\n  }\r\n\r\n  this.actuator.actuate(this.grid, {\r\n    score:      this.score,\r\n    over:       this.over,\r\n    won:        this.won,\r\n    bestScore:  this.storageManager.getBestScore(),\r\n    terminated: this.isGameTerminated()\r\n  });\r\n\r\n};\r\n\r\n// Represent the current game as an object\r\nGameManager.prototype.serialize = function () {\r\n  return {\r\n    grid:        this.grid.serialize(),\r\n    score:       this.score,\r\n    over:        this.over,\r\n    won:         this.won,\r\n    keepPlaying: this.keepPlaying\r\n  };\r\n};\r\n\r\n// Save all tile positions and remove merger info\r\nGameManager.prototype.prepareTiles = function () {\r\n  this.grid.eachCell(function (x, y, tile) {\r\n    if (tile) {\r\n      tile.mergedFrom = null;\r\n      tile.savePosition();\r\n    }\r\n  });\r\n};\r\n\r\n// Move a tile and its representation\r\nGameManager.prototype.moveTile = function (tile, cell) {\r\n  this.grid.cells[tile.x][tile.y] = null;\r\n  this.grid.cells[cell.x][cell.y] = tile;\r\n  tile.updatePosition(cell);\r\n};\r\n\r\n// Move tiles on the grid in the specified direction\r\nGameManager.prototype.move = function (direction) {\r\n  // 0: up, 1: right, 2: down, 3: left\r\n  var self = this;\r\n\r\n  if (this.isGameTerminated()) return; // Don't do anything if the game's over\r\n\r\n  var cell, tile;\r\n\r\n  var vector     = this.getVector(direction);\r\n  var traversals = this.buildTraversals(vector);\r\n  var moved      = false;\r\n\r\n  // Save the current tile positions and remove merger information\r\n  this.prepareTiles();\r\n\r\n  // Traverse the grid in the right direction and move tiles\r\n  traversals.x.forEach(function (x) {\r\n    traversals.y.forEach(function (y) {\r\n      cell = { x: x, y: y };\r\n      tile = self.grid.cellContent(cell);\r\n\r\n      if (tile) {\r\n        var positions = self.findFarthestPosition(cell, vector);\r\n        var next      = self.grid.cellContent(positions.next);\r\n\r\n        // Only one merger per row traversal?\r\n        if (next && next.value === tile.value && !next.mergedFrom) {\r\n          var merged = new Tile(positions.next, tile.value * 2);\r\n          merged.mergedFrom = [tile, next];\r\n\r\n          self.grid.insertTile(merged);\r\n          self.grid.removeTile(tile);\r\n\r\n          // Converge the two tiles' positions\r\n          tile.updatePosition(positions.next);\r\n\r\n          // Update the score\r\n          self.score += merged.value;\r\n\r\n          // The mighty 2048 tile\r\n          if (merged.value === 2048) self.won = true;\r\n        } else {\r\n          self.moveTile(tile, positions.farthest);\r\n        }\r\n\r\n        if (!self.positionsEqual(cell, tile)) {\r\n          moved = true; // The tile moved from its original cell!\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  if (moved) {\r\n    this.addRandomTile();\r\n\r\n    if (!this.movesAvailable()) {\r\n      this.over = true; // Game over!\r\n    }\r\n\r\n    this.actuate();\r\n  }\r\n};\r\n\r\n// Get the vector representing the chosen direction\r\nGameManager.prototype.getVector = function (direction) {\r\n  // Vectors representing tile movement\r\n  var map = {\r\n    0: { x: 0,  y: -1 }, // Up\r\n    1: { x: 1,  y: 0 },  // Right\r\n    2: { x: 0,  y: 1 },  // Down\r\n    3: { x: -1, y: 0 }   // Left\r\n  };\r\n\r\n  return map[direction];\r\n};\r\n\r\n// Build a list of positions to traverse in the right order\r\nGameManager.prototype.buildTraversals = function (vector) {\r\n  var traversals = { x: [], y: [] };\r\n\r\n  for (var pos = 0; pos < this.size; pos++) {\r\n    traversals.x.push(pos);\r\n    traversals.y.push(pos);\r\n  }\r\n\r\n  // Always traverse from the farthest cell in the chosen direction\r\n  if (vector.x === 1) traversals.x = traversals.x.reverse();\r\n  if (vector.y === 1) traversals.y = traversals.y.reverse();\r\n\r\n  return traversals;\r\n};\r\n\r\nGameManager.prototype.findFarthestPosition = function (cell, vector) {\r\n  var previous;\r\n\r\n  // Progress towards the vector direction until an obstacle is found\r\n  do {\r\n    previous = cell;\r\n    cell     = { x: previous.x + vector.x, y: previous.y + vector.y };\r\n  } while (this.grid.withinBounds(cell) &&\r\n           this.grid.cellAvailable(cell));\r\n\r\n  return {\r\n    farthest: previous,\r\n    next: cell // Used to check if a merge is required\r\n  };\r\n};\r\n\r\nGameManager.prototype.movesAvailable = function () {\r\n  return this.grid.cellsAvailable() || this.tileMatchesAvailable();\r\n};\r\n\r\n// Check for available matches between tiles (more expensive check)\r\nGameManager.prototype.tileMatchesAvailable = function () {\r\n  var self = this;\r\n\r\n  var tile;\r\n\r\n  for (var x = 0; x < this.size; x++) {\r\n    for (var y = 0; y < this.size; y++) {\r\n      tile = this.grid.cellContent({ x: x, y: y });\r\n\r\n      if (tile) {\r\n        for (var direction = 0; direction < 4; direction++) {\r\n          var vector = self.getVector(direction);\r\n          var cell   = { x: x + vector.x, y: y + vector.y };\r\n\r\n          var other  = self.grid.cellContent(cell);\r\n\r\n          if (other && other.value === tile.value) {\r\n            return true; // These two tiles can be merged\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nGameManager.prototype.positionsEqual = function (first, second) {\r\n  return first.x === second.x && first.y === second.y;\r\n};\r\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}